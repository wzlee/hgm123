<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
 		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
 		http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit.xsd"
 		default-autowire="byName" default-lazy-init="true">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:annotation-config />
	<context:component-scan base-package="com.wzlee.hgm123.contorller" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>
	<resources mapping="/myLib/**" location="/myLib/"/>
	<resources mapping="/assert/**" location="/assert/"/>
	<resources mapping="/app/**" location="/app/"/>
	<resources mapping="/html/**" location="/html/"/>
	<resources mapping="/upload/**" location="/upload/"/>
	<resources mapping="/touch/**" location="/touch/"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> 
	
	<beans:bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <beans:property name="maxUploadSize">
        	<beans:value>11048576</beans:value>
       	</beans:property>
    </beans:bean>
	
	<context:component-scan base-package="com.wzlee.hgm123" />
	
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config.properties" />
	
	<mongo:mongo host="${mongo.host}" port="${mongo.port}">
		<mongo:options connections-per-host="${mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}"
			auto-connect-retry="${mongo.autoConnectRetry}" socket-keep-alive="${mongo.socketKeepAlive}"
			socket-timeout="${mongo.socketTimeout}" slave-ok="${mongo.slaveOk}"
			write-number="1" write-timeout="0" write-fsync="true" />
	</mongo:mongo>

	<mongo:db-factory id="mongoDbFactory" dbname="hgm" />
  	<mongo:mapping-converter id="converter" />

	<!-- <mongo:db-factory dbname="${mongo.dbname}" mongo-ref="mongo"/> -->

	<beans:bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<beans:constructor-arg name="mongo" ref="mongo"/>
		<beans:constructor-arg name="databaseName" value="hgm" />
	</beans:bean>
	
	<beans:bean class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
    	<beans:constructor-arg ref="mongoDbFactory" />
    	<beans:constructor-arg ref="converter" />
  	</beans:bean>
	
	<mongo:repositories base-package="com.wzlee.hgm123.repositories"/>
	
	<ehcache:annotation-driven cache-manager="ehCacheManager" />
	
	<beans:bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">    
       <beans:property name="configLocation" value="classpath:ehcache.xml" />    
   </beans:bean>
   
   	<!-- Quartz配置 -->
	<beans:bean id="autoGreb" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<beans:property name="jobDetail">
			<!-- 使用嵌套Bean的方式来定义任务Bean -->
			<beans:bean class="org.springframework.scheduling.quartz.JobDetailBean">
				<!-- 指定任务Bean的实现类 -->
				<beans:property name="jobClass" value="com.wzlee.hgm123.repositories.QuartzRepository" />
			</beans:bean>
		</beans:property>
		<!-- 指定Cron表达式：每天9点到23点每隔30分钟执行一次 -->
		<beans:property name="cronExpression" value="0 3/30 09-23 * * ?" />
	</beans:bean>
	<!-- 执行实际的调度调度 -->
	<beans:bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<beans:property name="triggers">
			<beans:list>
				<beans:ref local="autoGreb" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- <beans:bean id="connectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
    	<beans:constructor-arg value="somehost"/>
    	<beans:property name="username" value="admin"/>
    	<beans:property name="password" value="admin"/>
    	<beans:property name="channelCacheSize" value="25"/>
	</beans:bean>
	
	<rabbit:connection-factory id="connectionFactory"/>

    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"/>

    <rabbit:admin connection-factory="connectionFactory"/>

    <rabbit:queue name="foo"/>
    
    <beans:bean id="amqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	    <beans:constructor-arg ref="connectionFactory" />
	    <beans:property name="exchange" value="foo.exchange" />
	    <beans:property name="routingKey" value="foo" />
	    <beans:property name="replyQueue" ref="replyQ" />
	    <beans:property name="replyTimeout" value="600000" />
	</beans:bean> -->
</beans:beans>